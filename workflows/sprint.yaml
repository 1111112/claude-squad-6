# Sprint Workflow - 6-Day Development Cycle
# Optimized for parallel execution and minimal handoffs

version: "1.0"
name: "Sprint Development"
duration: "6 days"
description: "Standard feature development workflow for 5-person team"

# Three-stage workflow (simplified from 5+ stages)
stages:
  
  # Stage 1: Alignment (2 hours)
  align:
    name: "Requirements & Planning"
    duration: "2h"
    parallel: false
    
    tasks:
      - id: "vision"
        role: "product_owner"
        action: "create_vision_doc"
        outputs: ["vision.md"]
        duration: "30m"
        
      - id: "acceptance"
        role: "qa_engineer"
        action: "define_acceptance_criteria"
        dependencies: ["vision"]
        outputs: ["acceptance_criteria.md"]
        duration: "30m"
        
      - id: "technical_design"
        role: "backend_dev"
        action: "design_architecture"
        dependencies: ["vision"]
        outputs: ["technical_design.md"]
        duration: "30m"
        
      - id: "story_breakdown"
        role: "product_owner"
        action: "create_user_stories"
        dependencies: ["acceptance", "technical_design"]
        outputs: ["user_stories.md"]
        duration: "30m"
    
    gates:
      - all_stories_under_2_days
      - acceptance_criteria_defined
      - technical_feasibility_confirmed

  # Stage 2: Build (5 days)
  build:
    name: "Parallel Development"
    duration: "5d"
    parallel: true
    
    waves:
      # Wave 1: Core implementation
      - tasks:
        - id: "api_implementation"
          role: "backend_dev"
          action: "implement_api"
          outputs: ["api/", "tests/api/"]
          duration: "2d"
          
        - id: "ui_mockup"
          role: "frontend_dev"
          action: "create_ui_components"
          outputs: ["components/", "tests/components/"]
          duration: "2d"
          
        - id: "ci_setup"
          role: "devops_eng"
          action: "setup_pipeline"
          outputs: [".github/workflows/", "Dockerfile"]
          duration: "1d"
      
      # Wave 2: Integration
      - tasks:
        - id: "api_integration"
          role: "frontend_dev"
          action: "integrate_backend"
          dependencies: ["api_implementation", "ui_mockup"]
          outputs: ["services/", "tests/integration/"]
          duration: "1d"
          
        - id: "test_suite"
          role: "qa_engineer"
          action: "create_test_suite"
          dependencies: ["api_implementation", "ui_mockup"]
          outputs: ["tests/e2e/", "test_plan.md"]
          duration: "1.5d"
      
      # Wave 3: Polish & deployment prep
      - tasks:
        - id: "performance_optimization"
          role: "backend_dev"
          action: "optimize_performance"
          dependencies: ["api_integration"]
          outputs: ["benchmarks/"]
          duration: "0.5d"
          
        - id: "deployment_config"
          role: "devops_eng"
          action: "configure_deployment"
          dependencies: ["ci_setup", "api_integration"]
          outputs: ["k8s/", "terraform/"]
          duration: "0.5d"
    
    quality_checks:
      - unit_test_coverage: 80
      - integration_tests_pass: true
      - no_security_vulnerabilities: true
      - performance_benchmarks_met: true

  # Stage 3: Ship (4 hours)
  ship:
    name: "Deployment & Validation"
    duration: "4h"
    parallel: false
    
    tasks:
      - id: "final_review"
        role: "qa_engineer"
        action: "execute_test_plan"
        outputs: ["test_report.md"]
        duration: "1h"
        
      - id: "staging_deploy"
        role: "devops_eng"
        action: "deploy_staging"
        dependencies: ["final_review"]
        outputs: ["deployment_log.md"]
        duration: "1h"
        
      - id: "acceptance_test"
        role: "product_owner"
        action: "validate_acceptance"
        dependencies: ["staging_deploy"]
        outputs: ["acceptance_signoff.md"]
        duration: "1h"
        
      - id: "production_deploy"
        role: "devops_eng"
        action: "deploy_production"
        dependencies: ["acceptance_test"]
        outputs: ["release_notes.md"]
        duration: "1h"
    
    gates:
      - all_tests_passing
      - staging_validation_complete
      - product_owner_approval
      - rollback_plan_ready

# Success metrics
metrics:
  velocity:
    target: "3-5 story points per day"
    measure: "completed_stories / days"
  quality:
    target: "< 2 bugs per feature"
    measure: "production_bugs / features_shipped"
  cycle_time:
    target: "< 6 days"
    measure: "ship_date - start_date"

# Handoff protocols
handoffs:
  backend_to_frontend:
    trigger: "api_endpoints_ready"
    artifacts: ["openapi.yaml", "postman_collection.json"]
    notification: "slack"
    
  dev_to_qa:
    trigger: "feature_complete"
    artifacts: ["test_environments.md", "known_issues.md"]
    notification: "github_issue"
    
  qa_to_devops:
    trigger: "tests_passing"
    artifacts: ["test_report.html", "performance_metrics.json"]
    notification: "deployment_queue"